<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Y2Fvc60ypR1Dj4TP53c10Od48lCebwHE941qVvIM13OeOUx2MntJB/PfHpxr9pipfFy3PFIkBOHkcYT/
        8hczvfs2p5pDfTzXk+lv5kWPm2NEVYvl2mIAGrqmxkwP15lOeI+FLDH/2l23FlkkZBFfv2uvGeQtq8t1
        Lbu+XPGspT5VCwNofFGkISIhDr/l6gsACgFQCIBCABQCoBAAhQAoBEAhAAoBUAiAQgAUAqAQAIUAKARA
        IQAKAVAIgEIAFAKgEACFACgEQCEACgFQeAUgqghc5BBAlF3M5V+KwMRLfGZFwBpAOZ0pppUiINGGstwC
        +CD1Hx5X81FrxcsCIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAAC
        IAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIADqVQFQEwA1AQhPK6E0SZQIQJgB9GIyr/J6wljA
        03QQgDACKOYcHmF9yjV2VtBJAMIGoC2DmME2i0WUoiwTgHAB6MzVvMI+yxW0BCBUAE5hAu9zyHr5NAEI
        DYAienMvq6lNc0FMAQgBgBIGMDWWYfqroQpAwAF0YAjPsyuj4gtAwAF0Y4yZxx/MuPgCEGAApzCJJRzJ
        qvgCEGAAk7MuvQAEGsA1Zu+PCEDhAujHTh0BChlAFz4SgEIGUGwmfwJQ0NPAuywu9EQFILwAhlKdovh7
        Y+cIBCCkAM5ia4KcnOLvYQZXsFQAwgvgOMpdcorv+bO52HROexYJQHgBFJl9PNqs+F+YweEldff5dRSA
        cF8LuK1RTk7xK5jDIEq//LkAhBzApVTGsnKKf4AyLqd1k58LQMgB9Kq7B+Ag/+ZK2jb7uQCEHEB7FnKY
        +QyjnevPBSDkAIoYzzWGQaImAAX+YIgACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAA
        CIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAA
        CIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAA
        CIAACIAACIAACIAAeAZgSexvCyePjwUgrADaM53FJqdksZiZAc5ZAJK2ItrRIWW0M68TgFACCH8TAAEQ
        AAEQAAEQAAEQAAEQAAEQAAEQAAEQAAEQAAEQAAEQAAEQAAEQAAEQAAEQAAEQAAEQgAIFsMkKQDnHqVcD
        1EooswJQCeusACyni3o1QK01b1jVtQJWWL3wU3qpVwPUuphd1qau2+EtqxdWMli9GqB2Lrus6roWZll9
        V0T5g3o1QG2SZVXfgbstXui8dD1nqF8D0k6MPfpmU9XpMMIc3u0I/JlS9W0AWhH3UWtV0xpuhT5WZwIc
        AIeYIgIBKP/P2GdZ0T0MdB6UfMPq5c4bqphKT/Wxrw/+v7Msv1PPj8zrTbvH8g2R2EPTa8zrB9CNNpTQ
        SuGLKDHV6GJG/pPMd39tGtWcFn/89UJrM/UI9rKKN5nLywpfRJk5ii+PTfzs6xih2oz/Yu1Yq3MBRyNQ
        +C/Sq+Equtd/c/zCctSoCE9Eub9h6HAqq9P0owh6+bfQt/Ho8Q51SoEBeLzp+ifdLc8dKcJR/vWcdfQM
        ciQHRaBAooaJzU8hlPJXASiQ/X+u++09PVksAgVQ/rX0S3Qi8WLL6wKK4JZ/N8OTnUu+2upGAkVQy3+A
        CakuJ4wVgRCX/3aKU19RGslmEQjlwX+CTfmddgnL0j63rPD70G94OteVT2cWh0QgJMU/YiZ+/dK9taAt
        N7BKx4HAF9856zcx08d6enIfGzK41KjwS/G38BhnZneT0Rn8miVUiUGgCh+l2hy/76dvbpa878IQnmAx
        O823SWa3HyjyUXQnatjDR0xjRMPtHrl73Oh8M5GYxn/4hM+poFLhm9jPdjPOf4fp5vt+ICfa7/f/B+Ba
        A0Mho10kAAAAAElFTkSuQmCC
</value>
  </data>
</root>